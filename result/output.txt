Processing image 101_1.tif ...  
Processing image 101_2.tif ...  
Processing image 101_3.tif ...  
Processing image 101_4.tif ...  
Processing image 101_5.tif ...  
Processing image 101_6.tif ...  
Processing image 101_7.tif ...  
Processing image 101_8.tif ...  
Processing image 102_1.tif ...  
Processing image 102_2.tif ...  
Processing image 102_3.tif ...  
Processing image 102_4.tif ...  
Processing image 102_5.tif ...  
Processing image 102_6.tif ...  
Processing image 102_7.tif ...  
Processing image 102_8.tif ...  
Processing image 103_1.tif ...  
Processing image 103_2.tif ...  
Processing image 103_3.tif ...  
Processing image 103_4.tif ...  
Processing image 103_5.tif ...  
Processing image 103_6.tif ...  
Processing image 103_7.tif ...  
Processing image 103_8.tif ...  
Processing image 104_1.tif ...  
Processing image 104_2.tif ...  
Processing image 104_3.tif ...  
Processing image 104_4.tif ...  
Processing image 104_5.tif ...  
Processing image 104_6.tif ...  
Processing image 104_7.tif ...  
Processing image 104_8.tif ...  
Processing image 105_1.tif ...  
Processing image 105_2.tif ...  
Processing image 105_3.tif ...  
Processing image 105_4.tif ...  
Processing image 105_5.tif ...  
Processing image 105_6.tif ...  
Processing image 105_7.tif ...  
Processing image 105_8.tif ...  
Processing image 106_1.tif ...  
Processing image 106_2.tif ...  
Processing image 106_3.tif ...  
Processing image 106_4.tif ...  
Processing image 106_5.tif ...  
Processing image 106_6.tif ...  
Processing image 106_7.tif ...  
Processing image 106_8.tif ...  
Processing image 107_1.tif ...  
Processing image 107_2.tif ...  
Processing image 107_3.tif ...  
Processing image 107_4.tif ...  
Processing image 107_5.tif ...  
Processing image 107_6.tif ...  
Processing image 107_7.tif ...  
Processing image 107_8.tif ...  
Processing image 108_1.tif ...  
Processing image 108_2.tif ...  
Processing image 108_3.tif ...  
Processing image 108_4.tif ...  
Processing image 108_5.tif ...  
Processing image 108_6.tif ...  
Processing image 108_7.tif ...  
Processing image 108_8.tif ...  
Processing image 109_1.tif ...  
Processing image 109_2.tif ...  
Processing image 109_3.tif ...  
Processing image 109_4.tif ...  
Processing image 109_5.tif ...  
Processing image 109_6.tif ...  
Processing image 109_7.tif ...  
Processing image 109_8.tif ...  
Processing image 110_1.tif ...  
Processing image 110_2.tif ...  
Processing image 110_3.tif ...  
Processing image 110_4.tif ...  
Processing image 110_5.tif ...  
Processing image 110_6.tif ...  
Processing image 110_7.tif ...  
Processing image 110_8.tif ...  
DONE
Size of the training set: 60
Size of the test set: 20

---------------------With Fix rank and variable thresold-----------------------------

----- START, threshold = 20, rank = 3 -----
Averaged probability for rank 3 and threshold 20 is 0.450000 
Accuracy for rank 3 and threshold 20 is 0.100000 
----- START, threshold = 30, rank = 3 -----
Averaged probability for rank 3 and threshold 30 is 0.291667 
Accuracy for rank 3 and threshold 30 is 0.250000 
----- START, threshold = 40, rank = 3 -----
Averaged probability for rank 3 and threshold 40 is 0.266667 
Accuracy for rank 3 and threshold 40 is 0.400000 
----- START, threshold = 50, rank = 3 -----
Averaged probability for rank 3 and threshold 50 is 0.316667 
Accuracy for rank 3 and threshold 50 is 0.450000 
----- START, threshold = 60, rank = 3 -----
Averaged probability for rank 3 and threshold 60 is 0.325000 
Accuracy for rank 3 and threshold 60 is 0.650000 

----------------------With Fix thresold and variable rank----------------------------

----- START, threshold = 50, rank = 1 -----
Averaged probability for rank 1 and threshold 50 is 0.166667 
Accuracy for rank 1 and threshold 50 is 0.550000 
----- START, threshold = 50, rank = 2 -----
Averaged probability for rank 2 and threshold 50 is 0.258333 
Accuracy for rank 2 and threshold 50 is 0.550000 
----- START, threshold = 50, rank = 3 -----
Averaged probability for rank 3 and threshold 50 is 0.316667 
Accuracy for rank 3 and threshold 50 is 0.450000 
----- START, threshold = 50, rank = 4 -----
Averaged probability for rank 4 and threshold 50 is 0.350000 
Accuracy for rank 4 and threshold 50 is 0.400000 
----- START, threshold = 50, rank = 5 -----
Averaged probability for rank 5 and threshold 50 is 0.400000 
Accuracy for rank 5 and threshold 50 is 0.400000 
----- START, threshold = 50, rank = 6 -----
Averaged probability for rank 6 and threshold 50 is 0.425000 
Accuracy for rank 6 and threshold 50 is 0.300000 
----- START, threshold = 50, rank = 7 -----
Averaged probability for rank 7 and threshold 50 is 0.450000 
Accuracy for rank 7 and threshold 50 is 0.350000 
----- START, threshold = 50, rank = 8 -----
Averaged probability for rank 8 and threshold 50 is 0.516667 
Accuracy for rank 8 and threshold 50 is 0.300000 
----- START, threshold = 50, rank = 9 -----
Averaged probability for rank 9 and threshold 50 is 0.550000 
Accuracy for rank 9 and threshold 50 is 0.350000 

--------------------------------------------------

Classes in the training set = dict_keys(['101', '102', '103', '104', '105', '106', '107', '108', '109', '110'])
{'101_2.tif': array([[54, 54, 54, ..., 54, 54, 54],
       [54, 54, 54, ..., 54, 54, 54],
       [54, 54, 54, ..., 54, 54, 54],
       ...,
       [54, 54, 54, ..., 54, 54, 54],
       [54, 54, 54, ..., 54, 54, 54],
       [54, 54, 54, ..., 54, 54, 54]], dtype=uint8), '101_6.tif': array([[52, 52, 52, ..., 52, 52, 52],
       [52, 52, 52, ..., 52, 52, 52],
       [52, 52, 52, ..., 52, 52, 52],
       ...,
       [52, 52, 52, ..., 52, 52, 52],
       [52, 52, 52, ..., 52, 52, 52],
       [52, 52, 52, ..., 52, 52, 52]], dtype=uint8), '102_2.tif': array([[50, 50, 50, ..., 50, 50, 50],
       [50, 50, 50, ..., 50, 50, 50],
       [50, 50, 50, ..., 50, 50, 50],
       ...,
       [50, 50, 50, ..., 50, 50, 50],
       [50, 50, 50, ..., 50, 50, 50],
       [50, 50, 50, ..., 50, 50, 50]], dtype=uint8), '102_6.tif': array([[53, 53, 53, ..., 53, 53, 53],
       [53, 53, 53, ..., 53, 53, 53],
       [53, 53, 53, ..., 53, 53, 53],
       ...,
       [53, 53, 53, ..., 53, 53, 53],
       [53, 53, 53, ..., 53, 53, 53],
       [53, 53, 53, ..., 53, 53, 53]], dtype=uint8), '103_2.tif': array([[54, 54, 54, ..., 54, 54, 54],
       [54, 54, 54, ..., 54, 54, 54],
       [54, 54, 54, ..., 54, 54, 54],
       ...,
       [54, 54, 54, ..., 54, 54, 54],
       [54, 54, 54, ..., 54, 54, 54],
       [54, 54, 54, ..., 54, 54, 54]], dtype=uint8), '103_6.tif': array([[53, 53, 53, ..., 53, 53, 53],
       [53, 53, 53, ..., 53, 53, 53],
       [53, 53, 53, ..., 53, 53, 53],
       ...,
       [53, 53, 53, ..., 53, 53, 53],
       [53, 53, 53, ..., 53, 53, 53],
       [53, 53, 53, ..., 53, 53, 53]], dtype=uint8), '104_2.tif': array([[53, 53, 53, ..., 53, 53, 53],
       [53, 53, 53, ..., 53, 53, 53],
       [53, 53, 53, ..., 53, 53, 53],
       ...,
       [53, 53, 53, ..., 53, 53, 53],
       [53, 53, 53, ..., 53, 53, 53],
       [53, 53, 53, ..., 53, 53, 53]], dtype=uint8), '104_6.tif': array([[56, 56, 56, ..., 56, 56, 56],
       [56, 56, 56, ..., 56, 56, 56],
       [56, 56, 56, ..., 56, 56, 56],
       ...,
       [56, 56, 56, ..., 56, 56, 56],
       [56, 56, 56, ..., 56, 56, 56],
       [56, 56, 56, ..., 56, 56, 56]], dtype=uint8), '105_2.tif': array([[54, 54, 54, ..., 54, 54, 54],
       [54, 54, 54, ..., 54, 54, 54],
       [54, 54, 54, ..., 54, 54, 54],
       ...,
       [54, 54, 54, ..., 54, 54, 54],
       [54, 54, 54, ..., 54, 54, 54],
       [54, 54, 54, ..., 54, 54, 54]], dtype=uint8), '105_6.tif': array([[54, 54, 54, ..., 54, 54, 54],
       [54, 54, 54, ..., 54, 54, 54],
       [54, 54, 54, ..., 54, 54, 54],
       ...,
       [54, 54, 54, ..., 54, 54, 54],
       [54, 54, 54, ..., 54, 54, 54],
       [54, 54, 54, ..., 54, 54, 54]], dtype=uint8), '106_2.tif': array([[54, 54, 54, ..., 54, 54, 54],
       [54, 54, 54, ..., 54, 54, 54],
       [54, 54, 54, ..., 54, 54, 54],
       ...,
       [54, 54, 54, ..., 54, 54, 54],
       [54, 54, 54, ..., 54, 54, 54],
       [54, 54, 54, ..., 54, 54, 54]], dtype=uint8), '106_6.tif': array([[54, 54, 54, ..., 54, 54, 54],
       [54, 54, 54, ..., 54, 54, 54],
       [54, 54, 54, ..., 54, 54, 54],
       ...,
       [54, 54, 54, ..., 54, 54, 54],
       [54, 54, 54, ..., 54, 54, 54],
       [54, 54, 54, ..., 54, 54, 54]], dtype=uint8), '107_2.tif': array([[53, 53, 53, ..., 53, 53, 53],
       [53, 53, 53, ..., 53, 53, 53],
       [53, 53, 53, ..., 53, 53, 53],
       ...,
       [53, 53, 53, ..., 53, 53, 53],
       [53, 53, 53, ..., 53, 53, 53],
       [53, 53, 53, ..., 53, 53, 53]], dtype=uint8), '107_6.tif': array([[54, 54, 54, ..., 54, 54, 54],
       [54, 54, 54, ..., 54, 54, 54],
       [54, 54, 54, ..., 54, 54, 54],
       ...,
       [54, 54, 54, ..., 54, 54, 54],
       [54, 54, 54, ..., 54, 54, 54],
       [54, 54, 54, ..., 54, 54, 54]], dtype=uint8), '108_2.tif': array([[54, 54, 54, ..., 54, 54, 54],
       [54, 54, 54, ..., 54, 54, 54],
       [54, 54, 54, ..., 54, 54, 54],
       ...,
       [54, 54, 54, ..., 54, 54, 54],
       [54, 54, 54, ..., 54, 54, 54],
       [54, 54, 54, ..., 54, 54, 54]], dtype=uint8), '108_6.tif': array([[53, 53, 53, ..., 53, 53, 53],
       [53, 53, 53, ..., 53, 53, 53],
       [53, 53, 53, ..., 53, 53, 53],
       ...,
       [53, 53, 53, ..., 53, 53, 53],
       [53, 53, 53, ..., 53, 53, 53],
       [53, 53, 53, ..., 53, 53, 53]], dtype=uint8), '109_2.tif': array([[53, 53, 53, ..., 53, 53, 53],
       [53, 53, 53, ..., 53, 53, 53],
       [53, 53, 53, ..., 53, 53, 53],
       ...,
       [53, 53, 53, ..., 53, 53, 53],
       [53, 53, 53, ..., 53, 53, 53],
       [53, 53, 53, ..., 53, 53, 53]], dtype=uint8), '109_6.tif': array([[50, 50, 50, ..., 50, 50, 50],
       [50, 50, 50, ..., 50, 50, 50],
       [50, 50, 50, ..., 50, 50, 50],
       ...,
       [50, 50, 50, ..., 50, 50, 50],
       [50, 50, 50, ..., 50, 50, 50],
       [50, 50, 50, ..., 50, 50, 50]], dtype=uint8), '110_2.tif': array([[50, 50, 50, ..., 50, 50, 50],
       [50, 50, 50, ..., 50, 50, 50],
       [50, 50, 50, ..., 50, 50, 50],
       ...,
       [50, 50, 50, ..., 50, 50, 50],
       [50, 50, 50, ..., 50, 50, 50],
       [50, 50, 50, ..., 50, 50, 50]], dtype=uint8), '110_6.tif': array([[45, 45, 45, ..., 45, 45, 45],
       [45, 45, 45, ..., 45, 45, 45],
       [45, 45, 45, ..., 45, 45, 45],
       ...,
       [45, 45, 45, ..., 45, 45, 45],
       [45, 45, 45, ..., 45, 45, 45],
       [45, 45, 45, ..., 45, 45, 45]], dtype=uint8)}
--- For query image: 101_2.tif ---
Probability of correct fpr for class 106 = 0.8333

------------------------A--------------------------

----- START, Threshold = 30 -----
Accuracy is 0.900000 
C:\Users\91985\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1245: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
The precision score is 0.0
F1 score is 0.0
----- START, Threshold = 40 -----
Accuracy is 0.900000 
C:\Users\91985\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1245: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
The precision score is 0.0
F1 score is 0.0
----- START, Threshold = 50 -----
Accuracy is 0.820000 
The precision score is 0.23333333333333334
F1 score is 0.28
----- START, Threshold = 60 -----
Accuracy is 0.100000 
The precision score is 0.1
F1 score is 0.1818
----- START, Threshold = 50 -----
Accuracy is 0.820000 
The precision score is 0.23333333333333334
F1 score is 0.28

---------------------------EER , FAR and FRR-----------------------

Equal Error Rate is: 0.3222
Generating ROC curve: False accept rates vs. false reject rates